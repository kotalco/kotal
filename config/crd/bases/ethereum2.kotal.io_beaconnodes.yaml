---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: beaconnodes.ethereum2.kotal.io
spec:
  group: ethereum2.kotal.io
  names:
    kind: BeaconNode
    listKind: BeaconNodeList
    plural: beaconnodes
    singular: beaconnode
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.client
      name: Client
      type: string
    - jsonPath: .spec.network
      name: Network
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BeaconNode is the Schema for the beaconnodes API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BeaconNodeSpec defines the desired state of BeaconNode
            properties:
              certSecretName:
                description: CertSecretName is k8s secret name that holds tls.key
                  and tls.cert
                type: string
              checkpointSyncUrl:
                description: CheckpointSyncURL is trusted beacon node rest api endpoint
                type: string
              client:
                description: Client is the Ethereum 2.0 client to use
                enum:
                - teku
                - prysm
                - lighthouse
                - nimbus
                type: string
              corsDomains:
                description: CORSDomains is the domains from which to accept cross
                  origin requests
                items:
                  type: string
                type: array
                x-kubernetes-list-type: set
              executionEngineEndpoint:
                description: ExecutionEngineEndpoint is Ethereum Execution engine
                  node endpoint
                type: string
              feeRecipient:
                description: FeeRecipient is ethereum address collecting transaction
                  fees
                pattern: ^0[xX][0-9a-fA-F]{40}$
                type: string
              grpc:
                description: GRPC enables GRPC gateway server
                type: boolean
              grpcPort:
                description: GRPCPort is GRPC gateway server port
                type: integer
              hosts:
                description: Hosts is a list of hostnames to to whitelist for API
                  access
                items:
                  type: string
                type: array
                x-kubernetes-list-type: set
              image:
                description: Image is Ethereum 2.0 Beacon node client image
                type: string
              jwtSecretName:
                description: JWTSecretName is kubernetes secret name holding JWT secret
                type: string
              logging:
                description: Logging is logging verboisty level
                enum:
                - "off"
                - fatal
                - error
                - warn
                - info
                - debug
                - trace
                - all
                - notice
                - crit
                - panic
                - none
                type: string
              network:
                description: Network is the network to join
                type: string
              p2pPort:
                description: P2PPort is p2p and discovery port
                type: integer
              resources:
                description: Resources is node compute and storage resources
                properties:
                  cpu:
                    description: CPU is cpu cores the node requires
                    pattern: ^[1-9][0-9]*m?$
                    type: string
                  cpuLimit:
                    description: CPULimit is cpu cores the node is limited to
                    pattern: ^[1-9][0-9]*m?$
                    type: string
                  memory:
                    description: Memory is memmory requirements
                    pattern: ^[1-9][0-9]*[KMGTPE]i$
                    type: string
                  memoryLimit:
                    description: MemoryLimit is cpu cores the node is limited to
                    pattern: ^[1-9][0-9]*[KMGTPE]i$
                    type: string
                  storage:
                    description: Storage is disk space storage requirements
                    pattern: ^[1-9][0-9]*[KMGTPE]i$
                    type: string
                  storageClass:
                    description: StorageClass is the volume storage class
                    type: string
                type: object
              rest:
                description: REST enables Beacon REST API
                type: boolean
              restPort:
                description: RESTPort is Beacon REST API server port
                type: integer
              rpc:
                description: RPC enables RPC server
                type: boolean
              rpcPort:
                description: RPCPort is RPC server port
                type: integer
            required:
            - client
            - executionEngineEndpoint
            - jwtSecretName
            - network
            type: object
          status:
            description: BeaconNodeStatus defines the observed state of BeaconNode
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
