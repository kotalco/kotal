---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: peers.ipfs.kotal.io
spec:
  group: ipfs.kotal.io
  names:
    kind: Peer
    listKind: PeerList
    plural: peers
    singular: peer
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.client
      name: Client
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Peer is the Schema for the peers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PeerSpec defines the desired state of Peer
            properties:
              api:
                description: API enables API server
                type: boolean
              apiPort:
                description: APIPort is api server port
                type: integer
              gateway:
                description: Gateway enables IPFS gateway server
                type: boolean
              gatewayPort:
                description: GatewayPort is local gateway port
                type: integer
              image:
                description: Image is ipfs peer client image
                type: string
              initProfiles:
                description: InitProfiles is the intial profiles to apply during
                items:
                  description: Profile is ipfs configuration
                  enum:
                  - server
                  - randomports
                  - default-datastore
                  - local-discovery
                  - test
                  - default-networking
                  - flatfs
                  - badgerds
                  - lowpower
                  type: string
                type: array
                x-kubernetes-list-type: set
              logging:
                description: Logging is logging verboisty level
                enum:
                - error
                - warn
                - info
                - debug
                - notice
                type: string
              profiles:
                description: Profiles is the configuration profiles to apply after
                  peer initialization
                items:
                  description: Profile is ipfs configuration
                  enum:
                  - server
                  - randomports
                  - default-datastore
                  - local-discovery
                  - test
                  - default-networking
                  - flatfs
                  - badgerds
                  - lowpower
                  type: string
                type: array
                x-kubernetes-list-type: set
              resources:
                description: Resources is node compute and storage resources
                properties:
                  cpu:
                    description: CPU is cpu cores the node requires
                    pattern: ^[1-9][0-9]*m?$
                    type: string
                  cpuLimit:
                    description: CPULimit is cpu cores the node is limited to
                    pattern: ^[1-9][0-9]*m?$
                    type: string
                  memory:
                    description: Memory is memmory requirements
                    pattern: ^[1-9][0-9]*[KMGTPE]i$
                    type: string
                  memoryLimit:
                    description: MemoryLimit is cpu cores the node is limited to
                    pattern: ^[1-9][0-9]*[KMGTPE]i$
                    type: string
                  storage:
                    description: Storage is disk space storage requirements
                    pattern: ^[1-9][0-9]*[KMGTPE]i$
                    type: string
                  storageClass:
                    description: StorageClass is the volume storage class
                    type: string
                type: object
              routing:
                description: Routing is the content routing mechanism
                enum:
                - none
                - dht
                - dhtclient
                - dhtserver
                type: string
              swarmKeySecretName:
                description: SwarmKeySecretName is the k8s secret holding swarm key
                type: string
            type: object
          status:
            description: PeerStatus defines the observed state of Peer
            properties:
              client:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
