name: Build-Push kotal

on:
  push:
    branches: [ master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ master ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Generate Docker metadata
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: |
          docker.io/kotalco/kotal
        tags: |
          type=ref,event=tag
          type=sha,prefix=,suffix=,format=short
        flavor: |
          latest=true


    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: kotalco
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
  test-on-digital-ocean:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v3

      - name: Add SHORT_SHA env property with commit short sha
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-7`" >> $GITHUB_ENV

      - name: Checkout kotal-helm-chart Repo
        uses: actions/checkout@v3
        with:
          repository: kotalco/kotal-helm-chart
          path: kotal-helm-chart

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.10.0

      - name: Add helm dependencies repositories
        run: |
          for dir in $(ls -d kotal-helm-chart/charts/*/); do
            helm dependency list $dir 2> /dev/null | tail +2 | head -n -1 | awk '{ print "helm repo add " $1 " " $3 }' | while read cmd; do $cmd; done
          done
          helm dependency update kotal-helm-chart/charts/kotal

      - name: K8s-set-context
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG_DO_TESTING }}

      - name: Update Kotal-Helm-Chart with new CRDs
        run: |
          kubectl apply -f ./config/crd/bases/

      - name: Testing and Update Kotal-Helm-Chart with controller-manager new image
        run: |
          helm upgrade kotal kotal-helm-chart/charts/kotal --install --wait --namespace=kotal --create-namespace --set "manager.tag=${SHORT_SHA}" --set "staging=true" --set=app.name=kotal --reuse-values --atomic
